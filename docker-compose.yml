services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    # Expose port 3000 when running with the "direct" (local) or "dev" profile.
    profiles: ["direct", "dev"]
    ports:
      - "3000:3000"
    env_file:
      - .env
    environment:
      - NODE_ENV=production
    depends_on:
      db:
        condition: service_healthy
  db:
    image: pgvector/pgvector:pg15
    env_file:
      - .env
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_DB=email_agent
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  caddy:
    # Caddy only runs when the 'prod' profile is active
    profiles: ["prod"]
    build:
      context: .
      dockerfile: Dockerfile.caddy
    restart: unless-stopped
    ports:
      # Map host port 3000 to container port 443 (for HTTPS via passthrough)
      - "3000:443"
      # Map host port 8080 to container port 80 (for potential HTTP challenges/redirects)
      - "8080:80"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile # Mount the Caddyfile
      - caddy_data:/data               # Persist certificates and Caddy state
    # Pass environment variables needed for DNS challenge
    env_file:
      - .env
    environment:
      - CLOUDFLARE_API_TOKEN=${CLOUDFLARE_API_TOKEN}
    depends_on:
      - app # Wait for the app service to be ready (optional but recommended)

volumes:
  db_data:
  caddy_data: # Define the volume for Caddy data